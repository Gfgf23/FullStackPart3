{"version":3,"sources":["components/promise.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handleChange","value","onChange","PersonForm","name","handleName","number","handleNumber","addNewName","onSubmit","type","Persons","persons","setPersons","map","person","onClick","noteService","Notification","message","cssStyle","style","App","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","console","log","respone","length","personsToShow","includes","event","target","color","fontSize","preventDefault","window","confirm","newPerson","find","per","changedPerson","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"sLACMA,EAAU,eAuBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANH,SAACG,GAEZ,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OChBnCM,EAAS,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,aACtB,OACC,2CACc,uBAAOC,MAAOF,EAAQG,SAAUF,QAI1CG,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAKC,EAA8C,EAA9CA,WAAWC,EAAmC,EAAnCA,OAAOC,EAA4B,EAA5BA,aAAaC,EAAe,EAAfA,WACxD,OACC,uBAAMC,SAAUD,EAAhB,UACI,yCACQ,uBAAOP,MAAOG,EAAMF,SAAUG,OAE3C,2CAAa,uBAAOJ,MAAOK,EAAQJ,SAAUK,OACxC,8BACE,wBAAQG,KAAK,SAAb,uBAODC,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,WAC1B,OACA,8BACCD,EAAQE,KAAK,SAAAC,GAAM,OACpB,8BAAsBA,EAAOX,KAA7B,IAAoCW,EAAOT,OAC3C,wBAAQU,QAAS,WAAMC,EAAgBF,EAAOpB,IAAIL,MAAK,SAAAC,GACtD0B,IAAqB3B,MAAK,SAAAC,GAAQ,OAAIsB,EAAWtB,UADlD,uBADQwB,EAAOX,YAYVc,EAAe,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,SAC9B,OAAe,OAAZD,EACK,KAKR,qBAAKE,MAAOD,EAAZ,SACED,KA6HUG,EAxHH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQX,EAAR,KAAiBC,EAAjB,KACA,EAAgCU,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQG,EAAR,KAAmBC,EAAnB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAA6BN,mBAAS,IAAtC,mBAAOJ,EAAP,KAAeW,EAAf,KACA,EAAsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAYAC,qBAAW,WACVC,QAAQC,IAAI,UACZlB,IACS3B,MAAK,SAAA8C,GACbvB,EAAWuB,QAKX,IAEFF,QAAQC,IAAI,SAASvB,EAAQyB,OAAO,WAEpC,IAAMC,EAAgB1B,EAAQb,QAAO,SAAAgB,GAAM,OAAIA,EAAOX,KAAKmC,SAASX,MA0EpE,OACE,gCACF,cAAC,EAAD,CAAQ7B,OAAQ6B,EAAW5B,aAVA,SAACwC,GAC3BN,QAAQC,IAAIK,EAAMC,OAAOxC,OACzB4B,EAAaW,EAAMC,OAAOxC,UASxB,cAAC,EAAD,CAAckB,QAASA,EAASC,SApGhB,CACjBsB,MAAO,QACPC,SAAU,MAmGZ,cAAC,EAAD,CAAcxB,QAASY,EAAcX,SAhGnB,CAChBsB,MAAO,MACPC,SAAU,MA+FR,2CAEA,cAAC,EAAD,CAAYvC,KAAMoB,EAASnB,WA1BP,SAACmC,GACxBN,QAAQC,IAAIK,EAAMC,OAAOxC,OACzBwB,EAAWe,EAAMC,OAAOxC,QAyBvBK,OAAQoB,EAAWnB,aArBM,SAACiC,GAC3BN,QAAQC,IAAIK,EAAMC,OAAOxC,OACzB0B,EAAaa,EAAMC,OAAOxC,QAmB4BO,WA/ErC,SAACgC,GACnBA,EAAMI,iBACN,IAAM7B,EAAS,CAAEX,KAAM,GAAGE,OAAO,IAIjC,GAHAS,EAAOX,KAAOoB,EACdT,EAAOT,OAAQoB,EACfQ,QAAQC,IAAIvB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOX,SACtCQ,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOX,QAAMmC,SAASxB,EAAOX,OACrD,GAAGyC,OAAOC,QAAP,UAAkB/B,EAAOX,KAAzB,oEAAgG,CAClG,IAAM2C,EAAYnC,EAAQoC,MAAK,SAAAC,GAAG,OAAIA,EAAI7C,OAASW,EAAOX,QACpD8C,EAAa,2BAAOH,GAAP,IAAiBzC,OAAOoB,IAkB3C,YAjBAT,EAAmBiC,EAAcvD,GAAGuD,GAAe5D,MAAK,SAAAC,GACrD0B,IACa3B,MAAK,SAAAC,GAAasB,EAAWtB,GACvCuC,EAAW,GAAD,OAAIf,EAAOX,KAAX,wBACV+C,YAAW,WACRrB,EAAW,QACR,WAETsB,OAAM,SAAAC,GACPrB,EAAgB,GAAD,OAAIjB,EAAOX,KAAX,uCACfa,IAAqB3B,MAAK,SAAAC,GAAQ,OAAIsB,EAAWtB,MACjD4D,YAAW,WACXnB,EAAgB,QACb,cAWPE,QAAQC,IAAIX,EAAQE,GACpBT,EACQF,GAAQzB,MAAK,SAAAC,GAClB0B,IACO3B,MAAK,SAAAC,GAAasB,EAAWtB,GACvCuC,EAAW,GAAD,OAAIf,EAAOX,KAAX,oBACF+C,YAAW,WACRrB,EAAW,QACnB,WAEHL,EAAW,IACXE,EAAa,OAmCT,yCACA,cAAC,EAAD,CAASf,QAAS0B,EAAezB,WAAYA,QCvKnDyC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd69daa3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update ,\r\n  del:del\r\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport noteService from './components/promise'\n\n const Filter = ({filter,handleChange}) => {\n\t  return (\n\t   <div>\n          Filter: <input value={filter} onChange={handleChange} />\n        </div>\n\t  )\n  }\n  const PersonForm = ({name,handleName,number,handleNumber,addNewName}) =>{\n\t  return (\n\t   <form onSubmit={addNewName}>\n        <div>\n          name: <input value={name} onChange={handleName} />\n        </div>\n\t\t <div>number: <input value={number} onChange={handleNumber} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\t  )\n\t  \n  }\n  \n   const Persons = ({persons,setPersons}) =>{\n\t  return(\n\t  <div>\n\t  {persons.map( person => \n\t  <p key={person.name}>{person.name} {person.number}\n\t  <button onClick={() =>{noteService.del(person.id).then(response => {\n\t\t  noteService.getAll().then(response => setPersons(response))\n\t  })\n\t \n\t  }}> delete</button>\n\t  </p>)\n\t  }\n\t  </div>\n\t  )\n  }\n  \n  const Notification = ({message,cssStyle}) => {\n\t  if(message === null){\n\t\t  return null\n\t  }\n\t  \n\t  \n\t  return(\n\t  <div style={cssStyle}>\n\t\t  {message}\n\t  </div>\n\t  )\n  }\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [message,setMessage] = useState('')\n  const [errorMessage,setErrorMessage]= useState('')\n  \n  const greenStyle = {\n\t\t  color: 'green',\n\t\t  fontSize: 40\n\t  }\n\t  \n   const redStyle = {\n\t\t  color: 'red',\n\t\t  fontSize: 40\n\t  }\n  \n  useEffect( () => {\n\t  console.log(\"effect\")\n\t  noteService.\n\t  getAll().then(respone => {\n\t\t  setPersons(respone)\n\t  })\n\t  \n\t \n\t  \n  },[])\n  \n  console.log('render',persons.length,'persons')\n  \n  const personsToShow = persons.filter(person => person.name.includes(newFilter))\n  \n  \n const addNewName = (event) => {\n\t event.preventDefault()\n\t const person = { name: '',number:'' }\n\t person.name = newName \n\t person.number= newNumber\n\t console.log(persons.map(person => person.name))\n\t if(persons.map(person => person.name).includes(person.name)) {\n\t\t if(window.confirm(`${person.name} already exits in the system, do you want to replace the number`)){\n\t\t\t const newPerson = persons.find(per => per.name === person.name)\n\t\t\t const changedPerson = {...newPerson,number:newNumber}\n\t\t\t noteService.update(changedPerson.id,changedPerson).then(response =>{\n\t\t     noteService\n\t         .getAll().then(response => {setPersons(response);\n\t         setMessage(`${person.name} number has changed`) ;\n\t         setTimeout(() => {\n             setMessage(null)\n             }, 5000);})\n\t           }\n\t\t\t  ).catch(error => {\n\t\t\t\t  setErrorMessage(`${person.name} has been deleted from the system!`);\n\t\t\t\t  noteService.getAll().then(response => setPersons(response));\n\t\t\t\t  setTimeout(() => {\n\t\t\t\t  setErrorMessage(null)\n\t\t\t\t  }, 5000)\n\t\t\t\t  \n\t\t\t  })\n\t\t\t  \n\t\t\t return\n\t\t\t \n\t\t }\n\t\t\t \n\t\t return \n\t }\n\t \n\t console.log(newName,newNumber)\n\t noteService\n\t .create(person).then(response =>{\n\t\t \t noteService\n\t .getAll().then(response => {setPersons(response);\n\t setMessage(`${person.name} has been added`) ;\n\t         setTimeout(() => {\n             setMessage(null)\n\t }, 5000);})\n\t })\n\t setNewName('')\n\t setNewNumber('')\n\n\t \n }\n\n \n\n const handleNameChange = (event) => {\n\t  console.log(event.target.value)\n\t  setNewName(event.target.value)\n\t  \n  }\n  \n  const handleNumberChange = (event) => {\n\t  console.log(event.target.value)\n\t  setNewNumber(event.target.value)\n\t  \n  }\n  const handleFilterChange = (event) => {\n\t  console.log(event.target.value)\n\t  setNewFilter(event.target.value)\n  }\n\n\n\n\n  return (\n    <div>\n\t <Filter filter={newFilter} handleChange={handleFilterChange}/>\n     <Notification message={message} cssStyle={greenStyle}/>\n\t <Notification message={errorMessage} cssStyle={redStyle}/>\n      <h2>Phonebook</h2>\n\t \n      <PersonForm name={newName} handleName={handleNameChange} \n\t   number={newNumber} handleNumber={handleNumberChange} addNewName={addNewName}/>\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}